plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	// Carpet mod
	maven {
		url 'https://jitpack.io'
	}
	maven {
		url 'https://masa.dy.fi/maven'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group

minecraft {
}

loom {
	accessWidener "src/main/resources/simpleauth.accesswidener"
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation  "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	// Password hashing
    // Argon2
	implementation "de.mkammerer:argon2-jvm:${argon2_version}"
	include "de.mkammerer:argon2-jvm:${argon2_version}"

	// BCrypt
	implementation "at.favre.lib:bcrypt:${bcrypt_version}"
	implementation "at.favre.lib:bytes:${bytes_version}"
	include "at.favre.lib:bcrypt:${bcrypt_version}"
	include "at.favre.lib:bytes:${bytes_version}"

	// Storage
	// LevelDB database
	implementation group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'
	implementation group: 'org.iq80.leveldb', name: 'leveldb-api', version: '0.12'
	include group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'
	include group: 'org.iq80.leveldb', name: 'leveldb-api', version: '0.12'

	// MongoDB driver
	implementation 'org.mongodb:mongodb-driver-sync:4.1.0'
	include 'org.mongodb:mongodb-driver-sync:4.1.0'



	// JNA lib
	include 'net.java.dev.jna:jna:5.5.0'

	// carpetMod
	// from masa's maven
	//modImplementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"
	//modImplementation "carpet:fabric-carpet:1.16-${project.carpet_core_version}"
	// jitpack for quicker updating
	modImplementation "com.github.gnembon:fabric-carpet:${project.carpet_branch}-SNAPSHOT"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
		mavenCentral()
	}
}

